version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: pogo_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: pogo_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - pogo_network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: pogo_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pogo_network

  # Elasticsearch for search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: pogo_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - pogo_network

  # PogoAPI Backend
  pogoapi:
    build: .
    container_name: pogo_api
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/pogo_db?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - DATABASE_NAME=pogo_db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - QDRANT_URL=${QDRANT_URL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
    ports:
      - "5000:5000"
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    depends_on:
      - mongodb
      - redis
      - elasticsearch
    networks:
      - pogo_network

  # Celery Worker
  celery_worker:
    build: .
    container_name: pogo_celery_worker
    restart: unless-stopped
    command: python start_celery.py
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/pogo_db?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - DATABASE_NAME=pogo_db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - QDRANT_URL=${QDRANT_URL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
    volumes:
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./firebase-service-account.json:/app/firebase-service-account.json:ro
    depends_on:
      - mongodb
      - redis
      - pogoapi
    networks:
      - pogo_network

  # Flower (Celery monitoring)
  flower:
    build: .
    container_name: pogo_flower
    restart: unless-stopped
    command: python start_flower.py
    environment:
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery_worker
    networks:
      - pogo_network

  # Nginx (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: pogo_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - pogoapi
    networks:
      - pogo_network

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data:

networks:
  pogo_network:
    driver: bridge 