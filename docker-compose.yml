version: '3.8'

services:
  # Redis for Celery broker
  redis:
    image: redis:7-alpine
    container_name: pogo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # MongoDB (optional - you can use Atlas instead)
  mongodb:
    image: mongo:7
    container_name: pogo-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: pogo
    volumes:
      - mongodb_data:/data/db
      - ./pogoapi/scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: pogo-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  # Flask Backend API
  backend:
    build:
      context: ./pogoapi
      dockerfile: Dockerfile
    container_name: pogo-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/pogo?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key}
    volumes:
      - ./pogoapi:/app
      - ./storage:/app/storage
    depends_on:
      - redis
      - mongodb
      - elasticsearch
    restart: unless-stopped
    command: gunicorn --bind 0.0.0.0:5000 --worker-class eventlet --workers 1 main:app

  # Celery Worker
  celery-worker:
    build:
      context: ./pogoapi
      dockerfile: Dockerfile
    container_name: pogo-celery-worker
    environment:
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/pogo?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./pogoapi:/app
      - ./storage:/app/storage
    depends_on:
      - redis
      - mongodb
      - elasticsearch
    restart: unless-stopped
    command: celery -A main.celery worker --loglevel=info

  # Celery Flower (monitoring)
  celery-flower:
    build:
      context: ./pogoapi
      dockerfile: Dockerfile
    container_name: pogo-celery-flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    command: celery -A main.celery flower --port=5555

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: pogo-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  redis_data:
  mongodb_data:
  elasticsearch_data: 